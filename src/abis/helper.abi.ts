export const GET_CODE_HASH_ABI = [
  {
    "type": "constructor",
    "inputs": [
      {
        "name": "addresses",
        "type": "address[]",
        "internalType": "address[]"
      }
    ],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "getCodeHashes",
    "inputs": [
      {
        "name": "addresses",
        "type": "address[]",
        "internalType": "address[]"
      }
    ],
    "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
    "stateMutability": "view"
  },
  {
    "type": "error",
    "name": "CodeHashesResult",
    "inputs": [
      { "name": "hash", "type": "bytes32", "internalType": "bytes32" }
    ]
  }
]

export const GET_CODE_HASH_BYTECODE =
  '0x608060405234801561001057600080fd5b506004361061002b5760003560e01c80637b34b62114610030575b600080fd5b61004361003e366004610159565b610055565b60405190815260200160405180910390f35b600080825167ffffffffffffffff81111561007257610072610127565b60405190808252806020026020018201604052801561009b578160200160208202803683370190505b50905060005b83518110156100f3578381815181106100bc576100bc61021e565b60200260200101516001600160a01b03163f8282815181106100e0576100e061021e565b60209081029190910101526001016100a1565b506000816040516020016101079190610234565b60408051601f198184030181529190528051602090910120949350505050565b634e487b7160e01b600052604160045260246000fd5b80356001600160a01b038116811461015457600080fd5b919050565b6000602080838503121561016c57600080fd5b823567ffffffffffffffff8082111561018457600080fd5b818501915085601f83011261019857600080fd5b8135818111156101aa576101aa610127565b8060051b604051601f19603f830116810181811085821117156101cf576101cf610127565b6040529182528482019250838101850191888311156101ed57600080fd5b938501935b82851015610212576102038561013d565b845293850193928501926101f2565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b6020808252825182820181905260009190848201906040850190845b8181101561026c57835183529284019291840191600101610250565b5090969550505050505056fea2646970667358221220bb6ca8a4baaefe02415e33ab7bee7dd28ea2a031ec58759031a3f1ea2562397464736f6c63430008170033'

export const GET_USEROP_HASHES_ABI = [
  {
    "type": "constructor",
    "inputs": [
      {
        "name": "entryPoint",
        "type": "address",
        "internalType": "contract IEntryPoint"
      },
      {
        "name": "packedUserOps",
        "type": "tuple[]",
        "internalType": "struct PackedUserOperation[]",
        "components": [
          { "name": "sender", "type": "address", "internalType": "address" },
          { "name": "nonce", "type": "uint256", "internalType": "uint256" },
          { "name": "initCode", "type": "bytes", "internalType": "bytes" },
          { "name": "callData", "type": "bytes", "internalType": "bytes" },
          {
            "name": "accountGasLimits",
            "type": "bytes32",
            "internalType": "bytes32"
          },
          {
            "name": "preVerificationGas",
            "type": "uint256",
            "internalType": "uint256"
          },
          { "name": "gasFees", "type": "bytes32", "internalType": "bytes32" },
          {
            "name": "paymasterAndData",
            "type": "bytes",
            "internalType": "bytes"
          },
          { "name": "signature", "type": "bytes", "internalType": "bytes" }
        ]
      }
    ],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "getUserOpHashes",
    "inputs": [
      {
        "name": "entryPoint",
        "type": "address",
        "internalType": "contract IEntryPoint"
      },
      {
        "name": "packedUserOps",
        "type": "tuple[]",
        "internalType": "struct PackedUserOperation[]",
        "components": [
          { "name": "sender", "type": "address", "internalType": "address" },
          { "name": "nonce", "type": "uint256", "internalType": "uint256" },
          { "name": "initCode", "type": "bytes", "internalType": "bytes" },
          { "name": "callData", "type": "bytes", "internalType": "bytes" },
          {
            "name": "accountGasLimits",
            "type": "bytes32",
            "internalType": "bytes32"
          },
          {
            "name": "preVerificationGas",
            "type": "uint256",
            "internalType": "uint256"
          },
          { "name": "gasFees", "type": "bytes32", "internalType": "bytes32" },
          {
            "name": "paymasterAndData",
            "type": "bytes",
            "internalType": "bytes"
          },
          { "name": "signature", "type": "bytes", "internalType": "bytes" }
        ]
      }
    ],
    "outputs": [
      { "name": "ret", "type": "bytes32[]", "internalType": "bytes32[]" }
    ],
    "stateMutability": "view"
  },
  {
    "type": "error",
    "name": "UserOpHashesResult",
    "inputs": [
      {
        "name": "userOpHashes",
        "type": "bytes32[]",
        "internalType": "bytes32[]"
      }
    ]
  }
]

export const GET_USEROP_HASHES_BYTECODE =
  '0x608060405234801561001057600080fd5b506004361061002b5760003560e01c80633e23d42514610030575b600080fd5b61004361003e366004610268565b610059565b6040516100509190610421565b60405180910390f35b6060815167ffffffffffffffff81111561007557610075610177565b60405190808252806020026020018201604052801561009e578160200160208202803683370190505b50905060005b825181101561015857836001600160a01b03166322cdde4c8483815181106100ce576100ce610465565b60200260200101516040518263ffffffff1660e01b81526004016100f291906104c1565b602060405180830381865afa15801561010f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101339190610584565b82828151811061014557610145610465565b60209081029190910101526001016100a4565b5092915050565b6001600160a01b038116811461017457600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b604051610120810167ffffffffffffffff811182821017156101b1576101b1610177565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156101e0576101e0610177565b604052919050565b80356101f38161015f565b919050565b600082601f83011261020957600080fd5b813567ffffffffffffffff81111561022357610223610177565b610236601f8201601f19166020016101b7565b81815284602083860101111561024b57600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561027b57600080fd5b82356102868161015f565b915060208381013567ffffffffffffffff808211156102a457600080fd5b818601915086601f8301126102b857600080fd5b8135818111156102ca576102ca610177565b8060051b6102d98582016101b7565b918252838101850191858101908a8411156102f357600080fd5b86860192505b838310156104105782358581111561031057600080fd5b8601610120818d03601f1901121561032757600080fd5b61032f61018d565b61033a8983016101e8565b815260408201358982015260608201358781111561035757600080fd5b6103658e8b838601016101f8565b60408301525060808201358781111561037d57600080fd5b61038b8e8b838601016101f8565b60608301525060a0820135608082015260c082013560a082015260e082013560c082015261010080830135888111156103c357600080fd5b6103d18f8c838701016101f8565b60e084015250610120830135888111156103ea57600080fd5b6103f88f8c838701016101f8565b918301919091525083525091860191908601906102f9565b809750505050505050509250929050565b6020808252825182820181905260009190848201906040850190845b818110156104595783518352928401929184019160010161043d565b50909695505050505050565b634e487b7160e01b600052603260045260246000fd5b6000815180845260005b818110156104a157602081850181015186830182015201610485565b506000602082860101526020601f19601f83011685010191505092915050565b602081526104db6020820183516001600160a01b03169052565b602082015160408201526000604083015161012080606085015261050361014085018361047b565b91506060850151601f1980868503016080870152610521848361047b565b9350608087015160a087015260a087015160c087015260c087015160e087015260e0870151915061010081878603018188015261055e858461047b565b90880151878203909201848801529350905061057a838261047b565b9695505050505050565b60006020828403121561059657600080fd5b505191905056fea26469706673582212206c8907c79ddfa402541b2b85b5f313922f383637fb974f10d01e1c9d68cd296d64736f6c63430008170033'
